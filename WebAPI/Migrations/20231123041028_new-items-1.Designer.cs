// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDb))]
    [Migration("20231123041028_new-items-1")]
    partial class newitems1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebAPI.Models.GroupTest", b =>
                {
                    b.Property<Guid>("GroupTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("GroupTestId");

                    b.ToTable("GroupTests");
                });

            modelBuilder.Entity("WebAPI.Models.Test", b =>
                {
                    b.Property<Guid>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("GroupTestId")
                        .HasColumnType("char(36)");

                    b.Property<string>("HighLimit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LowLimit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("TestId");

                    b.HasIndex("GroupTestId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("WebAPI.Models.TestResult", b =>
                {
                    b.Property<Guid>("TestResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HighLimit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LowLimit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("TestId")
                        .HasColumnType("char(36)");

                    b.HasKey("TestResultId");

                    b.HasIndex("TestId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("WebAPI.Models.Test", b =>
                {
                    b.HasOne("WebAPI.Models.GroupTest", "GroupTest")
                        .WithMany("Tests")
                        .HasForeignKey("GroupTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupTest");
                });

            modelBuilder.Entity("WebAPI.Models.TestResult", b =>
                {
                    b.HasOne("WebAPI.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("WebAPI.Models.GroupTest", b =>
                {
                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
